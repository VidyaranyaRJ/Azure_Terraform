# name: Terraform Workflow

# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     runs-on: ubuntu-latest

#     steps:
#       # Checkout the code
#       - name: Checkout code
#         uses: actions/checkout@v2

#       # Set up Azure Credentials using Azure Login Action
#       - name: Set up Azure Credentials
#         uses: azure/login@v1
#         with:
#           client-id: ${{ secrets.AZURE_CLIENT_ID }}            # GitHub secret for client ID
#           client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}    # GitHub secret for client secret
#           tenant-id: ${{ secrets.AZURE_TENANT_ID }}            # GitHub secret for tenant ID
#           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # GitHub secret for subscription ID

#       # Set up Terraform
#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.3.0  # You can specify the version you need

#       # Initialize Terraform with S3 backend and Azure provider configuration
#       - name: Terraform Init
#         run: terraform init

#       # Terraform Plan
#       - name: Terraform Plan
#         run: terraform plan

#       # Terraform Apply (auto-approve)
#       - name: Terraform Apply
#         run: terraform apply -auto-approve

#       # Optional: Terraform Destroy (uncomment if needed)
#       # - name: Terraform Destroy
#       #   run: terraform destroy -auto-approve

name: Terraform Workflow

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Grant permission for id-token

    steps:
      # Enable Debugging
      - name: Enable Debug Logging
        run: |
          echo "##[group]Enable Debugging"
          echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV  # Enable step debug for all steps
          echo "##[endgroup]"

      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Azure Credentials using Azure Login Action
      - name: Set up Azure Credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Reference GitHub Secret for Service Principal JSON
        continue-on-error: true  # Continue even if this step fails to capture logs

      # Debug the Azure Login
      - name: Debug Azure Login Result
        run: |
          echo "Azure login result"
          az account show || echo "Azure login failed"
        continue-on-error: true  # Continue even if login fails to capture logs

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0  # You can specify the version you need

      # Initialize Terraform with S3 backend and Azure provider configuration
      - name: Terraform Init
        run: terraform init

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan

      # Terraform Apply (auto-approve)
      - name: Terraform Apply
        run: terraform apply -auto-approve

      # Optional: Terraform Destroy (uncomment if needed)
      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve
